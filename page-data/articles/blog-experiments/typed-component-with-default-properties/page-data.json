{"componentChunkName":"component---src-templates-article-tsx","path":"/articles/blog-experiments/typed-component-with-default-properties/","result":{"pageContext":{"dest_url":"/articles/blog-experiments/typed-component-with-default-properties/","current":{"fields":{"dest_url":"/articles/blog-experiments/typed-component-with-default-properties/"},"excerpt":"利用 Typescript 的类型系统，可以写出更好的、tslint 友好的默认参数。 核心代码 这段代码可以通过传入的默认参数，给 component…","frontmatter":{"title":"Gatsby踩坑记 2.给React Component @ Typescript添加默认参数的正确姿势","date":"2019-12-31T21:41:15.000Z","keyWords":"Typescript,Reactjs,Component,默认参数,default Props","series":"Typescript,Reactjs,Gatsby踩坑记"},"html":"<p>利用 Typescript 的类型系统，可以写出更好的、tslint 友好的默认参数。</p>\n<h2>核心代码</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">//DefaultPropsUtil.tsx</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> withDefaultProps <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">object</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">DP</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Partial</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> Partial<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\">defaultProps<span class=\"token operator\">:</span> <span class=\"token constant\">DP</span><span class=\"token punctuation\">,</span>\n    Cmp<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span></span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">type</span> RequiredProps <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">keyof</span> <span class=\"token constant\">DP</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">type</span> Props <span class=\"token operator\">=</span> Partial<span class=\"token operator\">&lt;</span><span class=\"token constant\">DP</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> RequiredProps<span class=\"token punctuation\">;</span>\n    Cmp<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> defaultProps<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>Cmp <span class=\"token keyword\">as</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span>Props<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> withDefaultProps<span class=\"token punctuation\">;</span></code></pre></div>\n<p>这段代码可以通过传入的默认参数，给 component 对应的参数位设置为字面值类型。</p>\n<h2>使用方法</h2>\n<ol>\n<li>\n<p>定义<code class=\"language-text\">defaultProps</code>的值:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    hide<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>定义 component 的 props 类型:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> IExample <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    motd<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> defaultProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>注意这里要用 type 而不是 interface。</p>\n</li>\n<li>\n<p>定义 component，这个不是直接用来导出的。这里用 functional component 作为例子:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">FC</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> TExample<span class=\"token operator\">:</span> <span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span>IExample<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>hide <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> display<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>motd<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>最后调用 withDefaultProps, 并且 export</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> withDefaultProps <span class=\"token keyword\">from</span> <span class=\"token string\">\"./DefaultPropsUtil\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Example <span class=\"token operator\">=</span> <span class=\"token function\">withDefaultProps</span><span class=\"token punctuation\">(</span>defaultProps<span class=\"token punctuation\">,</span> TExample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Example<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ol>\n<h2>更复杂的例子:</h2>\n<p>这个博客的 SEO 部分使用了这个方法:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// SEO.tsx</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">FC</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> withDefaultProps <span class=\"token keyword\">from</span> <span class=\"token string\">\"./DefaultPropsUtil\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> LangSpec <span class=\"token operator\">=</span> <span class=\"token string\">\"zh\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"en\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> TypeSpec <span class=\"token operator\">=</span> <span class=\"token string\">\"article\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"website\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> KwdType <span class=\"token operator\">=</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// default props</span>\n<span class=\"token keyword\">const</span> defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    keywords<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token keyword\">as</span> KwdType<span class=\"token punctuation\">,</span>\n    lang<span class=\"token operator\">:</span> <span class=\"token string\">\"zh\"</span> <span class=\"token keyword\">as</span> LangSpec<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"article\"</span> <span class=\"token keyword\">as</span> TypeSpec<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> DefaultProps <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> defaultProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> ISEOData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    description<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    title<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    location<span class=\"token operator\">:</span> Location<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> DefaultProps<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">SEO_</span><span class=\"token operator\">:</span> <span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span>ISEOData<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do whatever you want</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">SEO</span> <span class=\"token operator\">=</span> <span class=\"token function\">withDefaultProps</span><span class=\"token punctuation\">(</span>defaultProps<span class=\"token punctuation\">,</span> <span class=\"token constant\">SEO_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token constant\">SEO</span><span class=\"token punctuation\">;</span></code></pre></div>"},"prev":{"fields":{"dest_url":"/articles/blog-experiments/configurate-bootstrap-and-scss/"},"excerpt":"最近懒得手写大量的 css, 准备用上 Bootstrap 偷懒一下。然而 bootstrap 的体积很大,\n会显著的增加网站的数据量。同时, 因为 gatsby 会将所有的 css…","frontmatter":{"title":"Gatsby踩坑 1.配置Bootstrap4以及SCSS","date":"2019-12-30T01:27:49.000Z","keyWords":"Gatsby,remove inline css,purge css,customize","series":"Gatsby踩坑记"},"html":"<blockquote>\n<p>最近懒得手写大量的 css, 准备用上 Bootstrap 偷懒一下。然而 bootstrap 的体积很大,\n会显著的增加网站的数据量。同时, 因为 gatsby 会将所有的 css 处理成 inline 形式放置在<code class=\"language-text\">&lt;head&gt;</code>标签里\n以尝试优化性能(<a href=\"https://github.com/gatsbyjs/gatsby/issues/2289#issuecomment-333407589\">see here</a>),\n这会让页面加载速度在网络不好的情况下略卡。</p>\n</blockquote>\n<p>Bootstrap4 官方支持用 scss 来自定义样式, 所以为了能使用这个功能, 先配置一下 scss。</p>\n<h2>配置 SCSS</h2>\n<p>gatsby 社区有一个“drop to work”的插件可以用, 直接安装后便可以将 scss 文件直接当成 css 文件来使用。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> gatsby-plugin-sass\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> -D node-sass</code></pre></div>\n<p>然后修改<code class=\"language-text\">gatsby-config.js</code>, 添加下面一段。注意, 为了避免 bug, 这个插件请尽可能放在前面。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token comment\">//sass支持, 其他例如purgecss、remark之类的插件一定要在这个之后加载</span>\n        <span class=\"token string\">\"gatsby-plugin-sass\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>配置 Bootstrap4</h2>\n<p>Bootstrap 默认使用<code class=\"language-text\">jQuery</code>处理页面元素, 但既然使用了 gatsby, 不如直接使用<code class=\"language-text\">ReactJS</code>来处理。所以安装\nBootstrap, 以及 react-bootstrap。同时, 因为 Bootstrap 的体积过大, 可以安装 gatsby-plugin-purgecss 来去除\n多余的 selectors。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> bootstrap4 react-bootstrap gatsby-plugin-purgecss</code></pre></div>\n<p>先配置一下 purgecss, 这里可以参考一下<a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-purgecss/?=purge#content---from-purgecss\">官方文档</a>,\n修改<code class=\"language-text\">gatsby-config.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//在`cssWhiteList`里添加想要忽略的selector</span>\n<span class=\"token keyword\">const</span> cssWhiteList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"fixed-top\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"collapsed\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"container\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"collapse\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cssWhitePattern <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token regex\">/^nav/</span><span class=\"token punctuation\">,</span> <span class=\"token regex\">/^bg-/</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            resolve<span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby-plugin-purgecss\"</span><span class=\"token punctuation\">,</span>\n            options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                printRejected<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Print removed selectors and processed file names</span>\n                <span class=\"token comment\">//gatsby develop的时候仍然启用, 这个可以帮助测试whitelist</span>\n                develop<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Enable while using \"gatsby develop\"</span>\n                <span class=\"token comment\">// tailwind: true, // Enable tailwindcss support</span>\n                whitelist<span class=\"token operator\">:</span> cssWhiteList<span class=\"token punctuation\">,</span> <span class=\"token comment\">// Don't remove this selector</span>\n                whitelistPatterns<span class=\"token operator\">:</span> cssWhitePattern<span class=\"token punctuation\">,</span>\n                ignore<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"prismjs/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"docsearch.js/\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Ignore files/folders</span>\n                <span class=\"token comment\">// purgeOnly : ['components/', '/main.css', 'bootstrap/'], // Purge only these files/folders</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>然后在 src 里创建一个 styles 文件夹, 新建<code class=\"language-text\">_custom_vars.scss</code>以及<code class=\"language-text\">bootstrap4_custom.scss</code>\n其中, optional 段可以根据需要来 import, 而自定义的 variables 要放在 custom<em>vars。能够修改的变量可以看\n`node</em>modules/bootstrap/scss/_variables.scss`这个文件, 注意, 我们不能在 import 对应的文件之前引用变量。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token comment\">//bootstrap4_custom.scss</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"custom_vars\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//custom bootstrap4 theme. See https://getbootstrap.com/docs/4.3/getting-started/theming/</span>\n<span class=\"token comment\">// Required</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/functions\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/variables\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/mixins\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Optional</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/root\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/reboot\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/type\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/images\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/code\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/grid\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/tables\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/forms\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/buttons\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/transitions\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/dropdown\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/button-group\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/input-group\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/custom-forms\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/nav\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/navbar\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/card\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/breadcrumb\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/pagination\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/badge\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/jumbotron\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/alert\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/progress\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/media\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/list-group\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/close\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/toasts\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/modal\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/tooltip\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/popover\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/carousel\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/spinners\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/utilities\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/print\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>然后在项目根目录创建<code class=\"language-text\">gatsby-browser.js</code>, 把刚刚创建的 scss 作为全局样式。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"./src/styles/bootstrap4_custom.scss\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>到这里, 就可以愉快的使用 Bootstrap 啦, react-bootstrap 提供了很多 component 可以用来解放双手, 例如:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescriptjsx\"><pre class=\"language-typescriptjsx\"><code class=\"language-typescriptjsx\">import React from &quot;react&quot;;\n//官方推荐直接从对应的submodule import\nimport Navbar from &quot;react-bootstrap/Navbar&quot;;\nconst Comp = (props) =&gt; {\n    return &lt;Navbar&gt;{/*other code*/}&lt;/Navbar&gt;;\n};</code></pre></div>\n<p>注意, purgecss 的工作原理是检查源代码里的 className property, 这个和 react-bootstrap 的实现方式有些冲突。\n所以为了避免对应的样式被清理掉, 一定要在 gatsby-config 里设置好 whitelist。</p>\n<h2>更改 Gatsby 默认 css 行为</h2>\n<p>如果看过 gatsby 生成的网页, 会发现每个页面都有重复的 inline css。可以通过<a href=\"https://www.gatsbyjs.org/docs/custom-html/\">自定义 html.js</a>来更改这个行为:</p>\n<ol>\n<li>从.cache 文件夹下复制<code class=\"language-text\">default-html.js</code> 到 src 文件夹下</li>\n<li>重命名为<code class=\"language-text\">html.js</code></li>\n<li>\n<p>修改代码 (<a href=\"https://github.com/gatsbyjs/gatsby/issues/2289#issuecomment-517276598\">感谢 Glinkis 的思路</a>)：</p>\n<div class=\"gatsby-highlight\" data-language=\"typescriptjsx\"><pre class=\"language-typescriptjsx\"><code class=\"language-typescriptjsx\">//上面不动\nexport default function HTML(props) {\n    const processHeadComp = (headComponents) =&gt; {\n        if (process.env.NODE_ENV === &quot;production&quot;) {\n            for (const component of headComponents) {\n                if (component.type === &quot;style&quot;) {\n                    const index = headComponents.indexOf(component);\n                    const link = &lt;link rel={&quot;stylesheet&quot;} href={component.props[&quot;data-href&quot;]} /&gt;;\n                    headComponents.splice(index, 1, link);\n                }\n            }\n        }\n    };\n\n    processHeadComp(props.headComponents);\n\n    return; //下面保留原有代码不变\n}</code></pre></div>\n</li>\n</ol>\n<p>这样, 在 production 环境下生成的 html 就会自动引用 sass 生成的 css 文件啦。</p>"},"next":{"fields":{"dest_url":"/articles/blog-experiments/quice-notes/"},"excerpt":"Fragment 和 <> 是一个东西","frontmatter":{"title":"Quick Notes","date":"2020-01-02T03:03:27.000Z","keyWords":"Note, React, Bootstrap, Gatsby","series":"Diary"},"html":"<p>Fragment 和 &#x3C;> 是一个东西</p>"}}}}