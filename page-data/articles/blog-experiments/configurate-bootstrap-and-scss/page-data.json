{"componentChunkName":"component---src-templates-article-tsx","path":"/articles/blog-experiments/configurate-bootstrap-and-scss/","result":{"pageContext":{"dest_url":"/articles/blog-experiments/configurate-bootstrap-and-scss/","current":{"fields":{"dest_url":"/articles/blog-experiments/configurate-bootstrap-and-scss/"},"excerpt":"最近懒得手写大量的css, 准备用上Bootstrap偷懒一下。然而bootstrap的体积很大, \n会显著的增加网站的数据量。同时, 因为gatsby会将所有的css处理成inline…","frontmatter":{"title":"Gatsby踩坑 1.配置Bootstrap4以及SCSS","date":"2019-12-30T01:27:49.000Z","keyWords":"Gatsby,remove inline css,purge css,customize","series":"Gatsby踩坑记"},"html":"<blockquote>\n<p>最近懒得手写大量的css, 准备用上Bootstrap偷懒一下。然而bootstrap的体积很大,\n会显著的增加网站的数据量。同时, 因为gatsby会将所有的css处理成inline形式放置在<code class=\"language-text\">&lt;head&gt;</code>标签里\n以尝试优化性能(<a href=\"https://github.com/gatsbyjs/gatsby/issues/2289#issuecomment-333407589\">see here</a>),\n这会让页面加载速度在网络不好的情况下略卡。</p>\n</blockquote>\n<p>Bootstrap4官方支持用scss来自定义样式, 所以为了能使用这个功能, 先配置一下scss。</p>\n<h2>配置SCSS</h2>\n<p>gatsby社区有一个“drop to work”的插件可以用, 直接安装后便可以将scss文件直接当成css文件来使用。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> gatsby-plugin-sass\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> -D node-sass</code></pre></div>\n<p>然后修改<code class=\"language-text\">gatsby-config.js</code>, 添加下面一段。注意, 为了避免bug, 这个插件请尽可能放在前面。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> \n    plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token comment\">//sass支持, 其他例如purgecss、remark之类的插件一定要在这个之后加载</span>\n        <span class=\"token string\">\"gatsby-plugin-sass\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>配置 Bootstrap4</h2>\n<p>Bootstrap默认使用<code class=\"language-text\">jQuery</code>处理页面元素, 但既然使用了gatsby, 不如直接使用<code class=\"language-text\">ReactJS</code>来处理。所以安装\nBootstrap, 以及react-bootstrap。同时, 因为Bootstrap的体积过大, 可以安装gatsby-plugin-purgecss来去除\n多余的selectors。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> bootstrap4 react-bootstrap gatsby-plugin-purgecss</code></pre></div>\n<p>先配置一下purgecss, 这里可以参考一下<a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-purgecss/?=purge#content---from-purgecss\">官方文档</a>,\n修改<code class=\"language-text\">gatsby-config.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//在`cssWhiteList`里添加想要忽略的selector</span>\n<span class=\"token keyword\">const</span> cssWhiteList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"fixed-top\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"collapsed\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"container\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"collapse\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cssWhitePattern <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token regex\">/^nav/</span><span class=\"token punctuation\">,</span> <span class=\"token regex\">/^bg-/</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> \n    plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby-plugin-purgecss\"</span><span class=\"token punctuation\">,</span>\n            options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                printRejected<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Print removed selectors and processed file names</span>\n                <span class=\"token comment\">//gatsby develop的时候仍然启用, 这个可以帮助测试whitelist</span>\n                develop<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Enable while using \"gatsby develop\"</span>\n                <span class=\"token comment\">// tailwind: true, // Enable tailwindcss support</span>\n                whitelist<span class=\"token punctuation\">:</span> cssWhiteList<span class=\"token punctuation\">,</span> <span class=\"token comment\">// Don't remove this selector</span>\n                whitelistPatterns<span class=\"token punctuation\">:</span> cssWhitePattern<span class=\"token punctuation\">,</span>\n                ignore<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"prismjs/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"docsearch.js/\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Ignore files/folders</span>\n                <span class=\"token comment\">// purgeOnly : ['components/', '/main.css', 'bootstrap/'], // Purge only these files/folders</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>然后在src里创建一个styles文件夹, 新建<code class=\"language-text\">_custom_vars.scss</code>以及<code class=\"language-text\">bootstrap4_custom.scss</code>\n其中, optional段可以根据需要来import, 而自定义的variables要放在custom<em>vars。能够修改的变量可以看\n`node</em>modules/bootstrap/scss/_variables.scss`这个文件, 注意, 我们不能在import对应的文件之前引用变量。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token comment\">//bootstrap4_custom.scss</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"custom_vars\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//custom bootstrap4 theme. See https://getbootstrap.com/docs/4.3/getting-started/theming/</span>\n<span class=\"token comment\">// Required</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/functions\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/variables\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/mixins\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Optional</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/root\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/reboot\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/type\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/images\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/code\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/grid\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/tables\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/forms\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/buttons\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/transitions\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/dropdown\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/button-group\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/input-group\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/custom-forms\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/nav\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/navbar\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/card\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/breadcrumb\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/pagination\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/badge\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/jumbotron\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/alert\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/progress\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/media\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/list-group\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/close\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/toasts\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/modal\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/tooltip\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/popover\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/carousel\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/spinners\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/utilities\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"node_modules/bootstrap/scss/print\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>然后在项目根目录创建<code class=\"language-text\">gatsby-browser.js</code>, 把刚刚创建的scss作为全局样式。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"./src/styles/bootstrap4_custom.scss\"</span></code></pre></div>\n<p>到这里, 就可以愉快的使用Bootstrap啦, react-bootstrap提供了很多component可以用来解放双手, 例如: </p>\n<div class=\"gatsby-highlight\" data-language=\"typescriptjsx\"><pre class=\"language-typescriptjsx\"><code class=\"language-typescriptjsx\">import React from &quot;react&quot;\n//官方推荐直接从对应的submodule import\nimport Navbar from &quot;react-bootstrap/Navbar&quot;\nconst Comp = (props) =&gt; {\n    return (\n        &lt;Navbar&gt;\n            {/*other code*/}\n        &lt;/Navbar&gt;\n    )\n};</code></pre></div>\n<p>注意, purgecss的工作原理是检查源代码里的className property, 这个和react-bootstrap的实现方式有些冲突。\n所以为了避免对应的样式被清理掉, 一定要在gatsby-config里设置好whitelist。</p>\n<h2>更改Gatsby默认css行为</h2>\n<p>如果看过gatsby生成的网页, 会发现每个页面都有重复的inline css。可以通过<a href=\"https://www.gatsbyjs.org/docs/custom-html/\">自定义html.js</a>来更改这个行为:</p>\n<ol>\n<li>从.cache文件夹下复制<code class=\"language-text\">default-html.js</code> 到src文件夹下</li>\n<li>重命名为<code class=\"language-text\">html.js</code></li>\n<li>\n<p>修改代码 (<a href=\"https://github.com/gatsbyjs/gatsby/issues/2289#issuecomment-517276598\">感谢Glinkis的思路</a>)：</p>\n<div class=\"gatsby-highlight\" data-language=\"typescriptjsx\"><pre class=\"language-typescriptjsx\"><code class=\"language-typescriptjsx\">//上面不动\nexport default function HTML(props) {\n    const processHeadComp = (headComponents) =&gt; {\n        if (process.env.NODE_ENV === &quot;production&quot;) {\n            for (const component of headComponents) {\n                if (component.type === &quot;style&quot;) {\n                    const index = headComponents.indexOf(component)\n                    const link = &lt;link rel={&quot;stylesheet&quot;} href={component.props[&quot;data-href&quot;]}/&gt;\n                    headComponents.splice(indexundefined 1undefined link)\n                }\n            }\n        }\n    }\n\n    processHeadComp(props.headComponents)\n\n    return //下面保留原有代码不变\n}</code></pre></div>\n</li>\n</ol>\n<p>这样, 在production环境下生成的html就会自动引用sass生成的css文件啦。</p>"},"prev":{"fields":{"dest_url":"/articles/hello-world/"},"excerpt":"Hello World! - this is not page title this is my first post Lorem ipsum Lorem ipsum dolor sit amet…","frontmatter":{"title":"Hello World!","date":"2019-12-23T06:44:31.000Z","keyWords":"Testing,Lorem Ipsum","series":"Test"},"html":"<h2>Hello World! - this is not page title</h2>\n<p>this is my first post</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello, world\"</span><span class=\"token punctuation\">)</span>\n\nmain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Lorem ipsum</h2>\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Id consectetur purus ut faucibus. Faucibus et molestie ac feugiat sed lectus vestibulum mattis. Mattis vulputate enim nulla aliquet porttitor lacus luctus. Consectetur a erat nam at lectus urna duis convallis. Dignissim convallis aenean et tortor at risus. Proin sagittis nisl rhoncus mattis rhoncus. Leo a diam sollicitudin tempor. Urna id volutpat lacus laoreet non curabitur gravida arcu ac. Gravida arcu ac tortor dignissim convallis aenean et. Eget arcu dictum varius duis at. Facilisi etiam dignissim diam quis enim lobortis. Ut placerat orci nulla pellentesque dignissim enim sit. Aliquam nulla facilisi cras fermentum. Cras pulvinar mattis nunc sed blandit libero volutpat. Velit dignissim sodales ut eu sem integer vitae. Arcu dictum varius duis at consectetur lorem donec massa. Elit ullamcorper dignissim cras tincidunt lobortis feugiat vivamus. In arcu cursus euismod quis.</p>\n<p>Aenean vel elit scelerisque mauris pellentesque pulvinar pellentesque habitant morbi. Id cursus metus aliquam eleifend mi in. Morbi tincidunt augue interdum velit euismod in. Risus viverra adipiscing at in tellus integer feugiat. Neque viverra justo nec ultrices. Diam ut venenatis tellus in metus vulputate eu. Odio pellentesque diam volutpat commodo. Gravida quis blandit turpis cursus in hac habitasse platea. Adipiscing elit ut aliquam purus. Augue ut lectus arcu bibendum. Eu turpis egestas pretium aenean pharetra magna. Purus faucibus ornare suspendisse sed nisi lacus sed viverra. Turpis egestas pretium aenean pharetra magna ac placerat.</p>\n<p>Sit amet commodo nulla facilisi nullam vehicula. Urna nec tincidunt praesent semper feugiat nibh. Aenean sed adipiscing diam donec adipiscing tristique. Egestas congue quisque egestas diam in arcu cursus euismod quis. Egestas dui id ornare arcu odio. Viverra orci sagittis eu volutpat. Auctor eu augue ut lectus arcu. Hac habitasse platea dictumst vestibulum rhoncus est pellentesque. A scelerisque purus semper eget. Vel turpis nunc eget lorem. Pretium fusce id velit ut tortor pretium viverra suspendisse potenti. Non arcu risus quis varius. Aenean et tortor at risus viverra adipiscing. Quis risus sed vulputate odio. Quam pellentesque nec nam aliquam. Pulvinar elementum integer enim neque volutpat ac. Lorem ipsum dolor sit amet consectetur adipiscing elit duis tristique.</p>\n<p>Enim ut tellus elementum sagittis vitae. Imperdiet nulla malesuada pellentesque elit eget gravida cum. Mi tempus imperdiet nulla malesuada pellentesque elit. Eget mi proin sed libero enim sed faucibus turpis. Urna duis convallis convallis tellus id interdum velit. Quis blandit turpis cursus in hac habitasse platea dictumst. Justo laoreet sit amet cursus sit amet dictum. Mattis aliquam faucibus purus in massa. Et netus et malesuada fames ac turpis. Interdum varius sit amet mattis vulputate enim nulla aliquet. In vitae turpis massa sed elementum tempus egestas sed. Faucibus turpis in eu mi bibendum neque. Ultrices eros in cursus turpis massa. Aliquet enim tortor at auctor urna nunc. Feugiat nisl pretium fusce id velit ut tortor pretium viverra. Placerat duis ultricies lacus sed turpis tincidunt id aliquet. Arcu bibendum at varius vel pharetra vel turpis nunc. Curabitur vitae nunc sed velit dignissim sodales ut eu. Lorem mollis aliquam ut porttitor leo a. Nisi scelerisque eu ultrices vitae auctor eu.</p>\n<p>Aliquam id diam maecenas ultricies mi eget mauris pharetra. Tincidunt id aliquet risus feugiat. Dictum non consectetur a erat nam at lectus. Mi proin sed libero enim sed faucibus turpis in eu. Aliquet nec ullamcorper sit amet risus nullam eget felis eget. In massa tempor nec feugiat nisl pretium fusce id. Eu tincidunt tortor aliquam nulla. Malesuada bibendum arcu vitae elementum curabitur vitae nunc. Diam in arcu cursus euismod quis viverra nibh cras pulvinar. Blandit cursus risus at ultrices mi tempus. Sapien eget mi proin sed libero enim sed faucibus turpis. Enim nec dui nunc mattis. Vel risus commodo viverra maecenas accumsan lacus vel facilisis volutpat. Scelerisque viverra mauris in aliquam sem fringilla ut. Quam lacus suspendisse faucibus interdum posuere lorem ipsum dolor. Tempus quam pellentesque nec nam. Sit amet nisl suscipit adipiscing bibendum. Maecenas sed enim ut sem viverra. Amet luctus venenatis lectus magna fringilla urna porttitor rhoncus dolor.</p>"},"next":{"fields":{"dest_url":"/articles/blog-experiments/typed-component-with-default-properties/"},"excerpt":"利用Typescript的类型系统，可以写出更好的、tslint友好的默认参数。 核心代码: 这段代码可以通过传入的默认参数，给component…","frontmatter":{"title":"Gatsby踩坑记 2.给React Component @ Typescript添加默认参数的正确姿势","date":"2019-12-31T21:41:15.000Z","keyWords":"Typescript,Reactjs,Component,默认参数,default Props","series":"Typescript,Reactjs,Gatsby踩坑记"},"html":"<p>利用Typescript的类型系统，可以写出更好的、tslint友好的默认参数。</p>\n<h2>核心代码:</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">//DefaultPropsUtil.tsx</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">const</span> withDefaultProps <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">object</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">DP</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Partial</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> Partial<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\">defaultProps<span class=\"token punctuation\">:</span> <span class=\"token constant\">DP</span><span class=\"token punctuation\">,</span>\n    Cmp<span class=\"token punctuation\">:</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span></span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">type</span> RequiredProps <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">keyof</span> <span class=\"token constant\">DP</span><span class=\"token operator\">></span>\n    <span class=\"token keyword\">type</span> Props <span class=\"token operator\">=</span> Partial<span class=\"token operator\">&lt;</span><span class=\"token constant\">DP</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> RequiredProps\n    Cmp<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> defaultProps\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>Cmp <span class=\"token keyword\">as</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span>Props<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> withDefaultProps</code></pre></div>\n<p>这段代码可以通过传入的默认参数，给component对应的参数位设置为字面值类型。</p>\n<h2>使用方法</h2>\n<ol>\n<li>\n<p>定义<code class=\"language-text\">defaultProps</code>的值:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    hide<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>    \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>定义component的props类型:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> IExample <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    motd<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> defaultProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>注意这里要用type而不是interface。</p>\n</li>\n<li>\n<p>定义component，这个不是直接用来导出的。这里用functional component作为例子:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token constant\">FC</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> TExample<span class=\"token punctuation\">:</span> <span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span>IExample<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>hide <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>display<span class=\"token punctuation\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>motd<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>最后调用withDefaultProps, 并且export</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> withDefaultProps <span class=\"token keyword\">from</span> <span class=\"token string\">\"./DefaultPropsUtil\"</span>\n<span class=\"token keyword\">const</span> Example <span class=\"token operator\">=</span> <span class=\"token function\">withDefaultProps</span><span class=\"token punctuation\">(</span>\n    defaultProps<span class=\"token punctuation\">,</span>\n    TExample\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Example<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ol>\n<h2>更复杂的例子:</h2>\n<p>这个博客的SEO部分使用了这个方法:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// SEO.tsx</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">FC</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> withDefaultProps <span class=\"token keyword\">from</span> <span class=\"token string\">\"./DefaultPropsUtil\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> LangSpec <span class=\"token operator\">=</span> <span class=\"token string\">\"zh\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"en\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> TypeSpec <span class=\"token operator\">=</span> <span class=\"token string\">\"article\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"website\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> KwdType <span class=\"token operator\">=</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// default props</span>\n<span class=\"token keyword\">const</span> defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    keywords<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token keyword\">as</span> KwdType<span class=\"token punctuation\">,</span>\n    lang<span class=\"token punctuation\">:</span> <span class=\"token string\">\"zh\"</span> <span class=\"token keyword\">as</span> LangSpec<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"article\"</span> <span class=\"token keyword\">as</span> TypeSpec<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> DefaultProps <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> defaultProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> ISEOData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    description<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    title<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    location<span class=\"token punctuation\">:</span> Location\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> DefaultProps<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">SEO_</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span>ISEOData<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do whatever you want</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">SEO</span> <span class=\"token operator\">=</span> <span class=\"token function\">withDefaultProps</span><span class=\"token punctuation\">(</span>\n    defaultProps<span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">SEO_</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token constant\">SEO</span><span class=\"token punctuation\">;</span></code></pre></div>"}}}}